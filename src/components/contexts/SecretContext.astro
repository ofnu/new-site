---
---
<div class="projects-container" id="projects">
  <div class="container">
    <div id="cowboy-player"></div>
  </div>
 </div>
 
 <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/asciinema-player@3.6.3/dist/bundle/asciinema-player.css" />
 <script is:inline src="https://cdn.jsdelivr.net/npm/asciinema-player@3.6.3/dist/bundle/asciinema-player.min.js"></script>
 
 <style>
  .projects-container {
    position: relative;
    width: 100%;
    height: 100%;
    background: var(--bg-primary);
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .container {
    width: 60%;
    max-width: 600px;
    margin: auto;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  #cowboy-player {
    width: 70%;
  }
 
  /* Base asciinema styling */
  :global(.asciinema-player) {
    height: 100% !important;
    width: 100% !important;
  }
  
  :global(.asciinema-terminal) {
    padding: 0 !important;
    border: none !important;
    background: transparent !important;
    display: block !important;
  }
  
  :global(.asciinema-player-wrapper) {
    padding: 0 !important;
  }
 
  :global(.asciinema-player-wrapper *) {
    display: none !important;
  }
 
  :global(.asciinema-terminal) {
    display: block !important;
  }
 
  /* Modified span targeting - preserve display but remove borders */
  :global(.ap-line),
  :global(span[role="paragraph"]) {
    border: 0 !important;
    border-width: 0 !important;
    border-style: none !important;
    border-color: transparent !important;
    background: transparent !important;
    margin: 0 !important;
    padding: 0 !important;
  }
 
  /* Keep pre styling simple */
  :global(pre[class^="ap"]) {
    margin: 0 !important;
    padding: 0 !important;
    background: transparent !important;
    border: none !important;
  }
  
  @media (max-width: 768px) {
    .container {
      width: 50%;
    }
    #cowboy-player {
      width: 95%;
    }
  }
 </style>
 
 <script>
  function cleanupPlayer(player: any, fadeOut = false) {
    const container = document.getElementById('cowboy-player');
    if (container) {
      if (fadeOut) {
        container.classList.add('fade-out');
        setTimeout(() => {
          if (player) {
            try {
              player.dispose();
            } catch (e) {
              console.log('Player cleanup error:', e);
            }
          }
          container.innerHTML = '';
          container.classList.remove('fade-out');
        }, 500);
      } else {
        if (player) {
          try {
            player.dispose();
          } catch (e) {
            console.log('Player cleanup error:', e);
          }
        }
        container.innerHTML = '';
      }
    }
  }
 
  function initPlayer() {
    if (typeof AsciinemaPlayer === 'undefined') return null;
    
    const snapContainer = document.querySelector('.snap-container');
    if (snapContainer) {
      snapContainer.classList.add('no-scroll');
    }
    
    const container = document.getElementById('cowboy-player');
    if (!container) return null;
 
    const player = AsciinemaPlayer.create(
      '/assets/cowboy.cast',
      container,
      {
        autoPlay: true,
        cols: 84,
        rows: 41,
        fit: 'width',
        controls: false,
        markers: false,
        preload: true,
        theme: {
          background: 'transparent',
          foreground: 'white',
          selection: 'white'
        }
      }
    );
 
    let isTransitioning = false;
 
    player.addEventListener('ended', () => {
      if (isTransitioning) return;
      isTransitioning = true;
 
      // Immediately disable scrolling
      if (snapContainer) {
        snapContainer.style.overflow = 'hidden';
        snapContainer.style.touchAction = 'none';
        snapContainer.classList.add('no-scroll');
      }
 
      // Force position during transition
      document.body.style.overflow = 'hidden';
      document.body.style.position = 'fixed';
      document.body.style.width = '100%';
      
      const mainContext = document.getElementById('main');
      mainContext?.scrollIntoView({ behavior: 'smooth' });
 
      // Clean up after transition
      setTimeout(() => {
        if (snapContainer) {
          snapContainer.classList.remove('no-scroll');
          snapContainer.style.overflow = '';
          snapContainer.style.touchAction = '';
        }
        document.body.style.overflow = '';
        document.body.style.position = '';
        document.body.style.width = '';
        isTransitioning = false;
      }, 1000); // Adjust timing to match your transition duration
    });
 
    return player;
  }
 
  document.addEventListener('DOMContentLoaded', function() {    
    let currentPlayer = null;
 
    const style = document.createElement('style');
    style.textContent = `
      .snap-container.no-scroll {
        overflow: hidden !important;
      }
    `;
    document.head.appendChild(style);
 
    const enterObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting && entry.intersectionRatio >= 0.9) {
          console.log('Starting new player instance');
          currentPlayer = initPlayer();
        }
      });
    }, {
      threshold: 0.9
    });
 
    const exitObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (!entry.isIntersecting || entry.intersectionRatio <= 0.1) {
          console.log('Cleaning up player with fade');
          cleanupPlayer(currentPlayer, true);
          currentPlayer = null;
          const snapContainer = document.querySelector('.snap-container');
          if (snapContainer) {
            snapContainer.classList.remove('no-scroll');
          }
        }
      });
    }, {
      threshold: 0.1
    });
 
    const projectsContext = document.getElementById('projects');
    if (projectsContext) {
      enterObserver.observe(projectsContext);
      exitObserver.observe(projectsContext);
    }
 
    window.addEventListener('unload', () => {
      enterObserver.disconnect();
      exitObserver.disconnect();
      cleanupPlayer(currentPlayer);
      const snapContainer = document.querySelector('.snap-container');
      if (snapContainer) {
        snapContainer.classList.remove('no-scroll');
      }
    });
  });
 </script>